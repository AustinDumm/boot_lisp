(macro define
    (lambda (binding . value)
        (if (list? binding)
            `(create! ,(first binding) (lambda ,(rest binding) (begin ,@value)))
            `(create! ,binding ,value))))
        
(define (map f elts . elts*)
    (if (empty? elts)
        '()
        (cons (apply f (first elts) (map first elts*))
              (apply map f (rest elts) (map rest elts*)))))
